name: Snyk Oauth Scans

on:
  workflow_dispatch:

jobs:
  snyk:
    runs-on: ubuntu-latest

    env:
      SNYK_ADMIN_TOKEN: ${{ secrets.SNYK_ADMIN_TOKEN }}
      GROUP_ID: ${{ secrets.GROUP_ID }}
      SERVICE_ACCOUNT_ID: ${{ secrets.SERVICE_ACCOUNT_ID }}
      API_BASE: https://api.snyk.io

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq python3 python3-venv python3-pip
          npm install -g snyk snyk-to-html

      - name: Rotate Service Account and Get Access Token
        id: oauth
        run: |
          response=$(curl -s -X POST \
          "$API_BASE/rest/groups/$GROUP_ID/service_accounts/$SERVICE_ACCOUNT_ID/secrets?version=2024-10-15" \
          -H "Authorization: token $SNYK_ADMIN_TOKEN" \
          -H "Content-Type: application/vnd.api+json" \
          -H "Accept: application/vnd.api+json" \
          -d '{
            "data": {
              "attributes": {
                "mode": "replace"
              },
              "type": "service_account"
            }
          }')
        
          client_id=$(echo "$response" | jq -r '.data.attributes.client_id')
          client_secret=$(echo "$response" | jq -r '.data.attributes.client_secret')
          
          echo "CLIENT_ID=$client_id" >> $GITHUB_ENV
          echo "CLIENT_SECRET=$client_secret" >> $GITHUB_ENV
          
      - name: Exchange client credentials for access token
        id: get_oauth_token
        run: |
          token_response=$(curl -s -X POST "https://api.snyk.io/oauth2/token" \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -d "grant_type=client_credentials&client_id=$CLIENT_ID&client_secret=$CLIENT_SECRET")

          access_token=$(echo "$token_response" | jq -r '.access_token')
          
          echo "SNYK_OAUTH_TOKEN=$access_token" >> $GITHUB_ENV

      - name: Install Python dependencies
        if: ${{ exists('requirements.txt') }}
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Install Node.js dependencies
        if: ${{ exists('package.json') }}
        run: npm ci
        
      - name: Run Snyk SCA Scan
        run: snyk test --severity-threshold=high --json-file-output=results-sca.json || true
        env:
          SNYK_OAUTH_TOKEN: ${{ env.SNYK_OAUTH_TOKEN }}

      - name: Run Snyk SAST Scan
        run: snyk code test --severity-threshold=high --json-file-output=results-sast.json || true
        env:
          SNYK_OAUTH_TOKEN: ${{ env.SNYK_OAUTH_TOKEN }}

      - name: Convert Snyk JSON to HTML
        run: | 
          snyk-to-html -i results-sca.json -o results-sca.html
          snyk-to-html -i results-sast.json -o results-sast.html

      - name: Upload Snyk HTMLs as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: snyk-reports
          path: |
            results-sca.html
            results-sast.html
